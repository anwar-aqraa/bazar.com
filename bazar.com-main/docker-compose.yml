version: '3.8'

services:
  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    networks:
      - app-network

  catalog-server:
    image: catalog-service
    build:
      context: .
      dockerfile: Dockerfile
      target: catalog
    volumes:
      - ./catalog:/app/catalog:ro
      - ./nginx:/app/nginx:ro
      - ./catalog/database.db:/app/database.db:rw
    environment:
      - NODE_ENV=production
      - REDIS_URL=redis://redis:6379
    deploy:
      update_config:
        delay: 10s
      endpoint_mode: dnsrr
    ports:
      - "3001:3001"
    networks:
      - app-network

  catalog-server-replica:
    image: catalog-service
    build:
      context: .
      dockerfile: Dockerfile
      target: catalog
    volumes:
      - ./catalog:/app/catalog:ro
      - ./nginx:/app/nginx:ro
      - ./catalog/database.db:/app/database.db:rw
    environment:
      - NODE_ENV=production
      - REDIS_URL=redis://redis:6379
    deploy:
      update_config:
        delay: 10s
      endpoint_mode: dnsrr
    ports:
      - "3009:3001"
    networks:
      - app-network

  order-server:
    image: order-service
    build:
      context: .
      dockerfile: Dockerfile
      target: order
    volumes:
      - ./order:/app/order:ro
      - ./nginx:/app/nginx:ro
    environment:
      - NODE_ENV=production
    deploy:
      update_config:
        delay: 10s
      endpoint_mode: dnsrr
    depends_on:
      - catalog-server
    ports:
      - "3002:3002"
    networks:
      - app-network

  order-server-replica:
    image: order-service
    build:
      context: .
      dockerfile: Dockerfile
      target: order
    volumes:
      - ./order:/app/order:ro
      - ./nginx:/app/nginx:ro
    environment:
      - NODE_ENV=production
    deploy:
      update_config:
        delay: 10s
      endpoint_mode: dnsrr
    depends_on:
      - catalog-server-replica  # Ensure the replica waits for the catalog replica
      - redis  # Ensure Redis is up before running
    ports:
      - "3008:3002"
    networks:
      - app-network

  client:
    image: client-service
    build:
      context: .
      dockerfile: Dockerfile
      target: client
    volumes:
      - ./frontend:/app/frontend:ro
    deploy:
      update_config:
        delay: 10s
      endpoint_mode: dnsrr
    depends_on:
      - catalog-server
      - order-server
      - catalog-server-replica
      - order-server-replica
    ports:
      - "3000:3000"
    networks:
      - app-network

  nginx:
    image: nginx:stable-alpine
    ports:
      - '8080:80'
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - catalog-server
      - order-server
      - client
    networks:
      - app-network

networks:
  app-network:
    driver: bridge